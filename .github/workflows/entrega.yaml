name: Deploy da nossa aplicação na AWS

on: [ push ]

jobs:

  preparar:
    runs-on: ubuntu-latest

    steps:
    - name: sincronizar repo
      uses: actions/checkout@v4

    - name: Copiar para o diretorio
      run: |
        mkdir -p build
        cp -r src/* build/

    - name: Mostrar arquivos
      working-directory: build
      run: ls -la

    - name: Configurar Zip
      run: sudo apt-get install zip -y

    - name: Comprimir arquivos
      working-directory: build
      run: zip -r impacta.zip *

    - name: Upload dos artefatos
      uses: actions/upload-artifact@v4
      with:
        name: impacta-lambda
        path: build/impacta.zip
   
  
  entrega:
    needs: preparar
    runs-on: ubuntu-latest

    environment:
      name: devl

    steps:
      - name: sincronizar repo
        uses: actions/checkout@v4

      - name: Baixar artefatos
        uses: actions/download-artifact@v4
        with: 
          name: impacta-lambda
          path: build

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v3
        with:
         terraform_version: "1.5.6"

      - name: Autenticar na AWS
        uses: aws-actions/configure-aws-credentials@v5.0.0
        with:
          aws-access-key-id: ${{ secrets.ID_CHAVE_AWS }}
          aws-secret-access-key: ${{ secrets.SEGREDO_CHAVE_AWS}}
          aws-region: us-east-1

      - name: Inicializar Terraform
        working-directory: terraform
        run: terraform init -input=false

      - name: Validar Terraform
        working-directory: terraform
        run: terraform validate

      - name: Planejamento Terraform
        working-directory: terraform
        run: terraform plan -out=tfplan

      - name: Aplicar Terraform
        working-directory: terraform
        env:
          TF_VAR_mensagem_personalizada: ${{vars.NOME_DO_AMBIENTE}}
        run: terraform apply -auto-approve tfplan